name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.7'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools tox
      - name: Test with tox
        run: tox -e style
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/test*.xml'

  #docs-style:
  #  name: Documentation Style Check
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v3
  # 
  #    - name: Running Vale
  #      uses: errata-ai/vale-action@reviewdog
  #      env:
  #        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #      with:
  #        files: doc
  #        reporter: github-pr-check
  #        level: error
  #        filter_mode: nofilter
  #        fail_on_error: true
  #        vale_flags: "--config=doc/.vale.ini"

  tests:
    name: Tests and coverage
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.7', '3.10']
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools tox tox-gh-actions
      - name: Test with tox
        # Only the tox environment specified in the tox.ini gh-actions is run
        run: tox
        env:
          REP_TEST_URL: https://repkube-dev.westeurope.cloudapp.azure.com/rep
          REP_TEST_USERNAME: repadmin
          REP_TEST_PASSWORD: repadmin

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    # needs: docs-style
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools tox
      - name: Generate the documentation with tox
        run: tox -e doc
      - name: Add gh-pages parameters
        run: |
          touch build/sphinx/html/.nojekyll
          echo "dev.rep.docs.pyansys.com" >> build/sphinx/html/CNAME
      - name: Deploy Documentation
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build/sphinx/html
          clean: true

  build:
    name: Build and publish library
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies and build the library
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install -r requirements/requirements_build.txt
          python -m build venv wheel
          python -m twine check dist/*
      - name: Upload to private PyPi
        run: |
          python -m twine upload --verbose --skip-existing dist/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}
          TWINE_REPOSITORY_URL: https://pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/upload
