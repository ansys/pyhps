name: Nightly Build
on:
  workflow_dispatch:
    inputs:
      hps-version:
        description: HPS version to test against
        default: 'latest-dev'
        type: choice
        options:
          - 'v1.0.2'
          - 'v1.1.1'
          - 'v1.2.0'
          - 'v1.3.45'
          - 'latest-dev'

  schedule:
  - cron: "0 2 * * *"

env:
  MAIN_PYTHON_VERSION: '3.12'
  PACKAGE_NAME: 'ansys-hps-client'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  style:
    uses: ./.github/workflows/style.yml
    secrets: inherit

  tests:
    strategy:
      matrix:
          os: ['ubuntu-latest']
          cfg: [
              { python-version: '3.10', toxenv: 'py310' },
              { python-version: '3.11', toxenv: 'py311' },
              { python-version: '3.12', toxenv: 'py312' },
              { python-version: '3.13', toxenv: 'py313' },
            ]
      fail-fast: false
    uses: ./.github/workflows/tests.yml
    secrets: inherit
    with:
      python-version: ${{ matrix.cfg.python-version }}   
      toxenv: ${{ matrix.cfg.toxenv }}
      runner: ${{ matrix.os }}
      hps-version: ${{ inputs.hps-version || 'latest-dev' }}
      
  smoke-tests:
    name: Build and Smoke tests
    runs-on: ${{ matrix.os }}
    needs: [style]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
        should-release:
          - ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags') }}
        exclude:
          - should-release: false 
            os: macos-latest
    steps:
      - uses: extractions/netrc@v2
        with:
          machine: github.com
          username: pyansys-ci-bot
          password: ${{ secrets.PYANSYS_CI_BOT_PACKAGE_TOKEN }}

      - name: Build wheelhouse and perform smoke test
        uses: ansys/actions/build-wheelhouse@v10
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: [style]
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - uses: extractions/netrc@v2
        with:
          machine: github.com
          username: pyansys-ci-bot
          password: ${{ secrets.PYANSYS_CI_BOT_PACKAGE_TOKEN }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools tox

          # Necessary for creating PDF
          sudo apt update
          sudo apt-get -y install latexmk
          sudo apt install texlive-latex-extra

      - name: Generate the documentation with tox
        run: tox -e doc-html-${{ runner.os == 'Linux' && 'linux' || 'windows' }},doc-pdf-${{ runner.os == 'Linux' && 'linux' || 'windows' }}

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation-html
          path: doc/_build/html
          retention-days: 7

      - name: Upload PDF Documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation-pdf
          path: doc/_build/latex/*.pdf
          retention-days: 7