name: Tests (callable) 

on:
  workflow_call:
    inputs:
      python-version:
        description: Python version to use
        type: string
        default: '3.10'
      toxenv:
        description: Name of the tox environment
        type: string
        default: 'py310'
      runner:
        description: Where to run
        type: string
        default: 'ubuntu-latest'
      hps-version:
        description: HPS version to test against
        type: string
        default: 'latest-dev'

jobs:

  tests:
    name: Tests and coverage
    runs-on: ${{ inputs.runner }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install dependencies
        with:
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.PYANSYS_CI_BOT_PACKAGE_TOKEN }}
        run: |
          python -m pip install --upgrade pip setuptools tox tox-gh-actions
          mkdir docker-compose-artifact
      
      - name: Start HPS services
        id: hps-services
        uses: ./.github/actions/hps_services
        with:
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          ghcr-username: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          ghcr-token: ${{ secrets.PYANSYS_CI_BOT_PACKAGE_TOKEN }}
          version: ${{ inputs.hps-version }}

      - name: Test with tox
        run: tox -e ${{ inputs.toxenv }}-coverage
        env:
          HPS_TEST_URL: ${{ steps.hps-services.outputs.url }}
          HPS_TEST_USERNAME: repadmin
          HPS_TEST_PASSWORD: repadmin

      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        if: ${{ inputs.python-version == '3.10' }}
        with:
          name: coverage-html
          path: .cov/html
          retention-days: 7

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: ${{ inputs.python-version == '3.10' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: '**/test*.xml'

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/test*.xml'
          check_name: Test Report ${{ inputs.runner }}:${{ inputs.python-version }}
          detailed_summary: true
          include_passed: true

      - name: Publish services info to summary
        if: success() || failure()
        run: cat build_info.md >> $GITHUB_STEP_SUMMARY
