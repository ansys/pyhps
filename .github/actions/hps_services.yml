name: 'Local HPS Deployment'

description: 'Docker Compose based local HPS deployment'

inputs:
  
  version:
    description: 'HPS version'
    required: true
    default: 'v1.0.2'

  token:
    description: 'Token'
    required: true
    type: string

  internal-package:
    description: 'Use the docker-compose internal package (instead of the customer one)'
    required: false
    default: false
    type: boolean

outputs:
  url:
    description: 'HPS URL'
    value: ${{ steps.set-outputs.outputs.url }}

  path:
    description: 'Path of the docker compose artifact'
    value: ${{ steps.set-outputs.outputs.path }}
  
runs:
  using: "composite"
  
  steps:
    - if: ${{ github.event.inputs.internal-package == false || github.event.inputs.internal-package == 'false' }}
      uses: dsaltares/fetch-gh-release-asset@master
      name: Download Customer Services Artifact
      with:
        file: 'docker-compose-customer.tar.gz'
        target: 'docker-compose-artifact/docker-compose-customer.tar.gz'
        repo: ansys-internal/rep-deployments
        version: tags/${{ inputs.version }}
        token: ${{ inputs.token }}

    - if: ${{ github.event.inputs.internal-package == true || github.event.inputs.internal-package == 'true' }}
      uses: dsaltares/fetch-gh-release-asset@master
      name: Download Internal Services Artifact
      with:
        file: 'docker-compose-internal.tar.gz'
        target: 'docker-compose-artifact/docker-compose-internal.tar.gz'
        repo: ansys-internal/rep-deployments
        version: tags/${{ inputs.version }}
        token: ${{ inputs.token }}

    - uses: KengoTODA/actions-setup-docker-compose@main
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Login in Github Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io/ansys-internal
        username: pyansys-ci-bot
        password: ${{ inputs.token }}

    - name: Start services (customer package)
      if: ${{ github.event.inputs.internal-package == false || github.event.inputs.internal-package == 'false' }}
      shell: bash
      run: |
        ls -la
        tar -xvzf docker-compose-customer.tar.gz
        mv docker-compose-customer docker-compose
        cd docker-compose
        docker-compose build
        docker-compose up -d
      working-directory: ./docker-compose-artifact

    - name: Start services (internal package)
      if: ${{ github.event.inputs.internal-package == true || github.event.inputs.internal-package == 'true' }}
      shell: bash
      run: |
        ls -la
        tar -xvzf docker-compose-internal.tar.gz
        mv docker-compose-internal docker-compose
        cd docker-compose
        docker-compose pull
        docker-compose up -d
      working-directory: ./docker-compose-artifact

    - name: Wait for services
      shell: bash
      run: |
        curl -k --head -X GET --retry 30 --retry-connrefused --retry-delay 1 https://localhost:8443/hps/jms/api/v1
        curl -k --head -X GET --retry 30 --retry-connrefused --retry-delay 1 https://localhost:8443/hps/fs/api/v1
        curl -k --head -X GET --retry 30 --retry-connrefused --retry-delay 1 https://localhost:8443/hps/rms/api/v1

    - name: Set outputs
      id: set-outputs
      shell: bash
      run: |
        echo "url=https://localhost:8443/hps" >> $GITHUB_OUTPUT
        echo "path=$(pwd)" >> $GITHUB_OUTPUT
      working-directory: ./docker-compose-artifact/docker-compose